# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=bash&pivots=python-framework-flask
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PYTHON_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy node to VM


env:
  WEBAPP_NAME: blockchain  # set this to the name of your Azure Web App
  PYTHON_VERSION: '3.8.13'              # set this to the Python version to use

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install prod dependencies
        run: pip install -r requirements/prod.txt
        
      - name: Testing with Pytest
        run: GTH_CONFIG=test.config.json python3 -m unittest discover -s tests -p 'test_*.py'
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: blockchain-node
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: blockchain-node
          path: .

      - run: echo "host" ${{ secrets.VM_HOST }}
      - run: echo "user" ${{ secrets.VM_USER }}

      - name: SSH Server Deploy
        # You may pin to the exact commit or the version.
        # uses: kostya-ten/ssh-server-deploy@e0deb814bc458a68b61f6597a865d096e33eb586
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          host: ${{ secrets.VM_HOST }}
          user: ${{ secrets.VM_USER }}
          pass: ${{ secrets.VM_PWD }}
          first_ssh: |
            pwd ; ls -la ;
            if test -f "${HOME}/blockchain/end_prod.sh"; then ${HOME}/blockchain/end_prod.sh; fi ;
            rm -rf ~/blockchain/ && mkdir -p ~/blockchain
          scp: |
            './blockchain/*' => /home/gth_group/blockchain/
          last_ssh: |
            echo "Starting node" ; pwd ; ls -la ;
            cd blockchain ; pwd ; ls -la ; chmod +x ./prod.sh ; ./prod.sh && echo "Node started"
