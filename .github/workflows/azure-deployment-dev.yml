name: Dev - Deploy node to VM


env:
  WEBAPP_NAME: blockchain
  PYTHON_VERSION: '3.8.13'

on:
  push:
    branches:
      - dev

  workflow_dispatch:

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    
      - name: Wait for unit tests to succeed
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: unit_tests
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
    
      - name: Wait for black to succeed
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-format
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: black_format
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: blockchain-node
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    environment: Development
    needs: tests

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: blockchain-node
          path: .

      - run: ls -l /home/runner/work/blockchain/blockchain
      - run: echo "host" ${{ secrets.VM_HOST }}
      - run: echo "user" ${{ secrets.VM_USER }}

      - name: SSH Server Deploy
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          host: ${{ secrets.VM_HOST }}
          user: ${{ secrets.VM_USER }}
          pass: ${{ secrets.VM_PWD }}
          first_ssh: |
            pwd ; ls -la ;
            if test -f "chmod +x ${HOME}/blockchain_dev/stop.sh ; ${HOME}/blockchain_dev/stop.sh 5010"; then ${HOME}/blockchain_dev/stop.sh; fi ;
            rm -rf ~/blockchain_dev/ && mkdir -p ~/blockchain_dev
          scp: |
            /home/runner/work/blockchain/blockchain_dev/* => /home/gth_group/blockchain_dev/
          last_ssh: |
            echo "Starting node" ; pwd ; ls -la ;
            cd blockchain ; pwd ; ls -la ; chmod +x ./deploy.sh ; ./deploy.sh ./configs/dev.config.json && echo "Node started"
